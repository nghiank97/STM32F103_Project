
#include "adc.h"

void AdcInit(){

/*
 * Enable clock for gpioa.0
 * Enable clock for adc
 * PA3,4 as analog input
 * Continuous mode
 * Align right
 * 2 conversion
 *
 */
	RCC->APB2ENR |= RCC_APB2ENR_IOPAEN;
	RCC->APB2ENR |= RCC_APB2ENR_ADC1EN;

	GPIOA->CRL &=~ (0b1111<<12);	// 12 - ADC3
	GPIOA->CRL &=~ (0b1111<<16);	// 16 - ADC4

	ADC1->CR1 |= (0b0110<<16);		// Regular simultaneous mode only
	ADC1->CR2 |= ADC_CR2_CONT;		// Continuous conversion mode
	ADC1->CR2 &=~ (1<<11);			// Right Alignment

	ADC1->CR1 |= (0000<<0);
}

uint16_t AdcGet(uint8_t channel){
	ADC1->SQR3 |= (channel<<0);
	ADC1->CR2 |= ADC_CR2_ADON;					// Enable ADC and to start conversion
	while(!(ADC1->SR)&(1<<ADC_SR_EOC));			// wait
	return (uint16_t)ADC1->DR & ADC_DR_DATA;	// read
}
