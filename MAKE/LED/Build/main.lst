ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccDCMrwM.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	MX_GPIO_Init:
  23              	.LFB67:
  24              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include "use.h"
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** /* USER CODE END PD */
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccDCMrwM.s 			page 2


  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PM */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE BEGIN PV */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE END PV */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/main.c **** void SystemClock_Config(void);
  49:Core/Src/main.c **** static void MX_GPIO_Init(void);
  50:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE END PFP */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  55:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE END 0 */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /**
  60:Core/Src/main.c ****   * @brief  The application entry point.
  61:Core/Src/main.c ****   * @retval int
  62:Core/Src/main.c ****   */
  63:Core/Src/main.c **** int main(void)
  64:Core/Src/main.c **** {
  65:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c ****   /* USER CODE END 1 */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  70:Core/Src/main.c **** 
  71:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  72:Core/Src/main.c ****   HAL_Init();
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* USER CODE END Init */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* Configure the system clock */
  79:Core/Src/main.c ****   SystemClock_Config();
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* USER CODE END SysInit */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* Initialize all configured peripherals */
  86:Core/Src/main.c ****   MX_GPIO_Init();
  87:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  88:Core/Src/main.c ****   setup();
  89:Core/Src/main.c ****   /* USER CODE END 2 */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* Infinite loop */
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccDCMrwM.s 			page 3


  92:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  93:Core/Src/main.c ****   while (1)
  94:Core/Src/main.c ****   {
  95:Core/Src/main.c ****     /* USER CODE END WHILE */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
  98:Core/Src/main.c ****     loop();
  99:Core/Src/main.c ****   }
 100:Core/Src/main.c ****   /* USER CODE END 3 */
 101:Core/Src/main.c **** }
 102:Core/Src/main.c **** 
 103:Core/Src/main.c **** /**
 104:Core/Src/main.c ****   * @brief System Clock Configuration
 105:Core/Src/main.c ****   * @retval None
 106:Core/Src/main.c ****   */
 107:Core/Src/main.c **** void SystemClock_Config(void)
 108:Core/Src/main.c **** {
 109:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 110:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 113:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 114:Core/Src/main.c ****   */
 115:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 116:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 117:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 118:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 119:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 120:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 121:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 122:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 123:Core/Src/main.c ****   {
 124:Core/Src/main.c ****     Error_Handler();
 125:Core/Src/main.c ****   }
 126:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 127:Core/Src/main.c ****   */
 128:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 129:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 130:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 131:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 132:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 133:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 136:Core/Src/main.c ****   {
 137:Core/Src/main.c ****     Error_Handler();
 138:Core/Src/main.c ****   }
 139:Core/Src/main.c **** }
 140:Core/Src/main.c **** 
 141:Core/Src/main.c **** /**
 142:Core/Src/main.c ****   * @brief GPIO Initialization Function
 143:Core/Src/main.c ****   * @param None
 144:Core/Src/main.c ****   * @retval None
 145:Core/Src/main.c ****   */
 146:Core/Src/main.c **** static void MX_GPIO_Init(void)
 147:Core/Src/main.c **** {
  25              		.loc 1 147 0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccDCMrwM.s 			page 4


  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 8
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30 0000 82B0     		sub	sp, sp, #8
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              	.LBB4:
 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 150:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  34              		.loc 1 150 0
  35 0002 0A4B     		ldr	r3, .L3
  36 0004 9A69     		ldr	r2, [r3, #24]
  37 0006 42F02002 		orr	r2, r2, #32
  38 000a 9A61     		str	r2, [r3, #24]
  39 000c 9A69     		ldr	r2, [r3, #24]
  40 000e 02F02002 		and	r2, r2, #32
  41 0012 0092     		str	r2, [sp]
  42 0014 009A     		ldr	r2, [sp]
  43              	.LBE4:
  44              	.LBB5:
 151:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  45              		.loc 1 151 0
  46 0016 9A69     		ldr	r2, [r3, #24]
  47 0018 42F00402 		orr	r2, r2, #4
  48 001c 9A61     		str	r2, [r3, #24]
  49 001e 9B69     		ldr	r3, [r3, #24]
  50 0020 03F00403 		and	r3, r3, #4
  51 0024 0193     		str	r3, [sp, #4]
  52 0026 019B     		ldr	r3, [sp, #4]
  53              	.LBE5:
 152:Core/Src/main.c **** 
 153:Core/Src/main.c **** }
  54              		.loc 1 153 0
  55 0028 02B0     		add	sp, sp, #8
  56              	.LCFI1:
  57              		.cfi_def_cfa_offset 0
  58              		@ sp needed
  59 002a 7047     		bx	lr
  60              	.L4:
  61              		.align	2
  62              	.L3:
  63 002c 00100240 		.word	1073876992
  64              		.cfi_endproc
  65              	.LFE67:
  67              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
  68              		.align	1
  69              		.global	HAL_TIM_PeriodElapsedCallback
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  73              		.fpu softvfp
  75              	HAL_TIM_PeriodElapsedCallback:
  76              	.LFB68:
 154:Core/Src/main.c **** 
 155:Core/Src/main.c **** /* USER CODE BEGIN 4 */
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccDCMrwM.s 			page 5


 156:Core/Src/main.c **** 
 157:Core/Src/main.c **** /* USER CODE END 4 */
 158:Core/Src/main.c **** 
 159:Core/Src/main.c **** /**
 160:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 161:Core/Src/main.c ****   * @note   This function is called  when TIM4 interrupt took place, inside
 162:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 163:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 164:Core/Src/main.c ****   * @param  htim : TIM handle
 165:Core/Src/main.c ****   * @retval None
 166:Core/Src/main.c ****   */
 167:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 168:Core/Src/main.c **** {
  77              		.loc 1 168 0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              	.LVL0:
  82 0000 08B5     		push	{r3, lr}
  83              	.LCFI2:
  84              		.cfi_def_cfa_offset 8
  85              		.cfi_offset 3, -8
  86              		.cfi_offset 14, -4
 169:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 172:Core/Src/main.c ****   if (htim->Instance == TIM4) {
  87              		.loc 1 172 0
  88 0002 0268     		ldr	r2, [r0]
  89 0004 034B     		ldr	r3, .L9
  90 0006 9A42     		cmp	r2, r3
  91 0008 00D0     		beq	.L8
  92              	.LVL1:
  93              	.L5:
 173:Core/Src/main.c ****     HAL_IncTick();
 174:Core/Src/main.c ****   }
 175:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 178:Core/Src/main.c **** }
  94              		.loc 1 178 0
  95 000a 08BD     		pop	{r3, pc}
  96              	.LVL2:
  97              	.L8:
 173:Core/Src/main.c ****     HAL_IncTick();
  98              		.loc 1 173 0
  99 000c FFF7FEFF 		bl	HAL_IncTick
 100              	.LVL3:
 101              		.loc 1 178 0
 102 0010 FBE7     		b	.L5
 103              	.L10:
 104 0012 00BF     		.align	2
 105              	.L9:
 106 0014 00080040 		.word	1073743872
 107              		.cfi_endproc
 108              	.LFE68:
 110              		.section	.text.Error_Handler,"ax",%progbits
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccDCMrwM.s 			page 6


 111              		.align	1
 112              		.global	Error_Handler
 113              		.syntax unified
 114              		.thumb
 115              		.thumb_func
 116              		.fpu softvfp
 118              	Error_Handler:
 119              	.LFB69:
 179:Core/Src/main.c **** 
 180:Core/Src/main.c **** /**
 181:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 182:Core/Src/main.c ****   * @retval None
 183:Core/Src/main.c ****   */
 184:Core/Src/main.c **** void Error_Handler(void)
 185:Core/Src/main.c **** {
 120              		.loc 1 185 0
 121              		.cfi_startproc
 122              		@ Volatile: function does not return.
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125              		@ link register save eliminated.
 126              	.LBB6:
 127              	.LBB7:
 128              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccDCMrwM.s 			page 7


  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccDCMrwM.s 			page 8


  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 129              		.loc 2 142 0
 130              		.syntax unified
 131              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 132 0000 72B6     		cpsid i
 133              	@ 0 "" 2
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccDCMrwM.s 			page 9


 134              		.thumb
 135              		.syntax unified
 136              	.L12:
 137 0002 FEE7     		b	.L12
 138              	.LBE7:
 139              	.LBE6:
 140              		.cfi_endproc
 141              	.LFE69:
 143              		.section	.text.SystemClock_Config,"ax",%progbits
 144              		.align	1
 145              		.global	SystemClock_Config
 146              		.syntax unified
 147              		.thumb
 148              		.thumb_func
 149              		.fpu softvfp
 151              	SystemClock_Config:
 152              	.LFB66:
 108:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 153              		.loc 1 108 0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 64
 156              		@ frame_needed = 0, uses_anonymous_args = 0
 157 0000 00B5     		push	{lr}
 158              	.LCFI3:
 159              		.cfi_def_cfa_offset 4
 160              		.cfi_offset 14, -4
 161 0002 91B0     		sub	sp, sp, #68
 162              	.LCFI4:
 163              		.cfi_def_cfa_offset 72
 109:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 164              		.loc 1 109 0
 165 0004 0023     		movs	r3, #0
 166 0006 0893     		str	r3, [sp, #32]
 167 0008 0993     		str	r3, [sp, #36]
 168 000a 0B93     		str	r3, [sp, #44]
 169 000c 0C93     		str	r3, [sp, #48]
 110:Core/Src/main.c **** 
 170              		.loc 1 110 0
 171 000e 0193     		str	r3, [sp, #4]
 172 0010 0293     		str	r3, [sp, #8]
 173 0012 0393     		str	r3, [sp, #12]
 174 0014 0493     		str	r3, [sp, #16]
 175 0016 0593     		str	r3, [sp, #20]
 115:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 176              		.loc 1 115 0
 177 0018 0122     		movs	r2, #1
 178 001a 0692     		str	r2, [sp, #24]
 116:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 179              		.loc 1 116 0
 180 001c 4FF48033 		mov	r3, #65536
 181 0020 0793     		str	r3, [sp, #28]
 118:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 182              		.loc 1 118 0
 183 0022 0A92     		str	r2, [sp, #40]
 119:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 184              		.loc 1 119 0
 185 0024 0222     		movs	r2, #2
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccDCMrwM.s 			page 10


 186 0026 0D92     		str	r2, [sp, #52]
 120:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 187              		.loc 1 120 0
 188 0028 0E93     		str	r3, [sp, #56]
 121:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 189              		.loc 1 121 0
 190 002a 4FF4E013 		mov	r3, #1835008
 191 002e 0F93     		str	r3, [sp, #60]
 122:Core/Src/main.c ****   {
 192              		.loc 1 122 0
 193 0030 06A8     		add	r0, sp, #24
 194 0032 FFF7FEFF 		bl	HAL_RCC_OscConfig
 195              	.LVL4:
 196 0036 80B9     		cbnz	r0, .L17
 128:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 197              		.loc 1 128 0
 198 0038 0F23     		movs	r3, #15
 199 003a 0193     		str	r3, [sp, #4]
 130:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 200              		.loc 1 130 0
 201 003c 0221     		movs	r1, #2
 202 003e 0291     		str	r1, [sp, #8]
 131:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 203              		.loc 1 131 0
 204 0040 0023     		movs	r3, #0
 205 0042 0393     		str	r3, [sp, #12]
 132:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 206              		.loc 1 132 0
 207 0044 4FF48062 		mov	r2, #1024
 208 0048 0492     		str	r2, [sp, #16]
 133:Core/Src/main.c **** 
 209              		.loc 1 133 0
 210 004a 0593     		str	r3, [sp, #20]
 135:Core/Src/main.c ****   {
 211              		.loc 1 135 0
 212 004c 01A8     		add	r0, sp, #4
 213 004e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 214              	.LVL5:
 215 0052 20B9     		cbnz	r0, .L18
 139:Core/Src/main.c **** 
 216              		.loc 1 139 0
 217 0054 11B0     		add	sp, sp, #68
 218              	.LCFI5:
 219              		.cfi_remember_state
 220              		.cfi_def_cfa_offset 4
 221              		@ sp needed
 222 0056 5DF804FB 		ldr	pc, [sp], #4
 223              	.L17:
 224              	.LCFI6:
 225              		.cfi_restore_state
 124:Core/Src/main.c ****   }
 226              		.loc 1 124 0
 227 005a FFF7FEFF 		bl	Error_Handler
 228              	.LVL6:
 229              	.L18:
 137:Core/Src/main.c ****   }
 230              		.loc 1 137 0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccDCMrwM.s 			page 11


 231 005e FFF7FEFF 		bl	Error_Handler
 232              	.LVL7:
 233              		.cfi_endproc
 234              	.LFE66:
 236              		.section	.text.main,"ax",%progbits
 237              		.align	1
 238              		.global	main
 239              		.syntax unified
 240              		.thumb
 241              		.thumb_func
 242              		.fpu softvfp
 244              	main:
 245              	.LFB65:
  64:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 246              		.loc 1 64 0
 247              		.cfi_startproc
 248              		@ Volatile: function does not return.
 249              		@ args = 0, pretend = 0, frame = 0
 250              		@ frame_needed = 0, uses_anonymous_args = 0
 251 0000 08B5     		push	{r3, lr}
 252              	.LCFI7:
 253              		.cfi_def_cfa_offset 8
 254              		.cfi_offset 3, -8
 255              		.cfi_offset 14, -4
  72:Core/Src/main.c **** 
 256              		.loc 1 72 0
 257 0002 FFF7FEFF 		bl	HAL_Init
 258              	.LVL8:
  79:Core/Src/main.c **** 
 259              		.loc 1 79 0
 260 0006 FFF7FEFF 		bl	SystemClock_Config
 261              	.LVL9:
  86:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 262              		.loc 1 86 0
 263 000a FFF7FEFF 		bl	MX_GPIO_Init
 264              	.LVL10:
  88:Core/Src/main.c ****   /* USER CODE END 2 */
 265              		.loc 1 88 0
 266 000e FFF7FEFF 		bl	setup
 267              	.LVL11:
 268              	.L20:
  98:Core/Src/main.c ****   }
 269              		.loc 1 98 0 discriminator 1
 270 0012 FFF7FEFF 		bl	loop
 271              	.LVL12:
 272 0016 FCE7     		b	.L20
 273              		.cfi_endproc
 274              	.LFE65:
 276              		.text
 277              	.Letext0:
 278              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 279              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 280              		.file 5 "Drivers/CMSIS/Include/core_cm3.h"
 281              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 282              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 283              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 284              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccDCMrwM.s 			page 12


 285              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 286              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 287              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 288              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 289              		.file 14 "Use/use.h"
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccDCMrwM.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Admin\AppData\Local\Temp\ccDCMrwM.s:16     .text.MX_GPIO_Init:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccDCMrwM.s:22     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\Admin\AppData\Local\Temp\ccDCMrwM.s:63     .text.MX_GPIO_Init:0000002c $d
C:\Users\Admin\AppData\Local\Temp\ccDCMrwM.s:68     .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccDCMrwM.s:75     .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\Admin\AppData\Local\Temp\ccDCMrwM.s:106    .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
C:\Users\Admin\AppData\Local\Temp\ccDCMrwM.s:111    .text.Error_Handler:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccDCMrwM.s:118    .text.Error_Handler:00000000 Error_Handler
C:\Users\Admin\AppData\Local\Temp\ccDCMrwM.s:144    .text.SystemClock_Config:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccDCMrwM.s:151    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Admin\AppData\Local\Temp\ccDCMrwM.s:237    .text.main:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccDCMrwM.s:244    .text.main:00000000 main

UNDEFINED SYMBOLS
HAL_IncTick
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
setup
loop
